1. What is memory leak?
2. Explain all the causes
for memory leak?
3. How to detect memory leak?
4. Why we shouldn’t use inner class?
5. How to avoid memory leaks?
6. What are weak references? Difference between weak amd strong references?
How weak references help in avoiding memory leaks?

LIFECYCLE
Q11: Life Cycle of Activity and Fragment ?


a. When activity A is opened -> It's life cycle

b. When another activity is opened, life cycle of previous and current activity.

c. When you press back button on Activity B -> then life cycle of Activity B and Activity A in sequence.

d. What will happend when you call finish() in onCreate

e. Life cycle of a fragment:
i. When A fragment is opened -> life cycle
ii. When B fragment is opened -> life cycle of A and B both fragment.
iii. When B is destroyed sequence life cycle of B and A Fragment

f. Sequential methods calling of activity and fragment during life cycle

g. Difference between add() and replace() method of a fragment

h. when onSaveInstance() is called?

i. When you show dialog on a fragment/activity which lifecycle method will be called?

j. When you get a call on your phone which life cycle method will be called?

Based on #broadcastreceiver)

1. How many types of broadcast receiver we have in android:
a. Local -> use only when broadcast is used only inside same process.
b. Normal -> use sendBroadcast(), Asynchronous broadcast.
c. Ordered -> use sendOrderedBroadcast(), synchronous broadcast.
d. Sticky -> normal broadcast intent is not available any more after this was send and processed by the system. use sendStickyBroadcast(Intent)


2. Do you know that local broadcast receiver is deprecated?
a. Alternate for the same?
b. What would you use and how would you communicate between Services and Activities/Fragments now?

3. Example of Sticky broadcast receiver?

https://stackoverflow.com/questions/2584497/what-is-the-difference-between-sendstickybroadcast-and-sendbroadcast-in-android
https://stackoverflow.com/questions/61484995/localbroadcastmanager-has-been-deprecated-what-i-should-use-instead-in-its-plac

(Based on services and threads)

1. Difference between services and intent service?
2.Difference between services and thread?
3.Intent service is deprecated , What is the alternate for it?
4. What is bind service?
a. Can a service be bind with multiple components?
b. If a service is bound by 2 components and if 1 of them is destroyed, would it also be destroyed?
5. In which case you'll use service and in which case you'll use thread?
6. In which thread service executes/run? and in which thread intent service executes/run?
7. What is Foreground service? eg. Above Oreo a notification bar is shown, if your app is in background and you want to perform some background operations
8. If you'll have to download 1000 of images, what you'll use?
9. Explain different methods of AsyncTask, Can you create your own async task?
10. Where you'll use bind services and where Normal Service
11. If due to some reason your service is destroyed and you want to resume your work, how you'll do that?
.
kotlin

Q:12,13,14,15.... so many based on Kotlin only

a. Difference between Normal class and data class
b. What are sealed classes
i. Difference between sealed and enum?
ii. Where have you used in your project?
c. Difference between const, val and var
d. How would you create Singleton classes in Kotlin.
e. What are companion objects ? or How do you achieve static functionalities in Kotlin
f. What are high order function? cons of using high order functions ?
g. What is the default type of a class in Kotlin ? - > Final
h. Difference between inline, cross inline, no inline functions ?
i. How many types of constructors are there in Kotlin ?
j. Different types of scope function in Kotlin ? (Let, apply, with , run , also)
k.Explain Elvis operator in Kotlin
l. Difference between Kotlin and Java? What all benefits do you see in Kotlin over Java?
m. how to concat two strings ?
n. What are extension functions and how does it look like when we convert them into byte code.
o. What is 'When' keyword in java, Where it is used?
p. Difference between lateinit and lazy loading.


If you've answers of above questions, 99% are chances you'll clear your Kotlin round for sure. Before your next interview brush-up your skills and you're good to go.

Feel free to like, comment and share this post with your connection so it would also help them in clearing their interviews rounds.



Q11: Life Cycle of Activity and Fragment ?


a. When activity A is opened -> It's life cycle

b. When another activity is opened, life cycle of previous and current activity.

c. When you press back button on Activity B -> then life cycle of Activity B and Activity A in sequence.

d. What will happend when you call finish() in onCreate

e. Life cycle of a fragment:
i. When A fragment is opened -> life cycle
ii. When B fragment is opened -> life cycle of A and B both fragment.
iii. When B is destroyed sequence life cycle of B and A Fragment

f. Sequential methods calling of activity and fragment during life cycle

g. Difference between add() and replace() method of a fragment

h. when onSaveInstance() is called?

i. When you show dialog on a fragment/activity which lifecycle method will be called?

j. When you get a call on your phone which life cycle method will be called?


Q7: Difference between concurrency and parallelism?

With the popularity of coroutines this question is also asked in almost every interview(9/10).

it's not a 2 or 5 marks question where you can escape by telling only the differences between them. interviewer wants to know How deep you can go depending upon your experiences.

If you don't know the depth don't worry I'm here to help.

List Of followup questions:
1. Why coroutine is preferred over thread ?
2. 1 coroutine is running on 1 thread
3. 10 coroutines running on 1 thread
4. 10 coroutines running on 3,4,5..n threads.
5. Maximum parallell work can be performed on a processor.
6. Why coroutines are called lightweight thread?
7. You can create 1000 coroutines but not threads?
8. What would happen if you create 1000 threads.
9. Maximum threads can be created ?
10. Why Performance overhead if we create so many threads ?
goes on.....


Question3: This is very important question asked in every android dev interview.
a. Internal working of viewmodel and how it survives configuration changes but not onBackPress()
b. How would you decide Which data you should store in fragment/activity and which one in viewmodel? -> this is important because android os may clean up the resources of viewmodel due to less memory.

https://write.agrevolution.in/view-model-and-how-it-works-internally-88295e8598ee

https://medium.com/@ianhlake/you-are-correct-the-viewmodel-is-destroyed-if-your-process-is-killed-by-android-ef611fcd51e6

 Life cycle of a View

People usually read about lifecycle of activity , fragment but many #androiddevs don't know about view's lifecycle which is crucial and quite important from performance perspective as well. if Ui is designed carefully it'll boost the performance of your application for sure.

https://proandroiddev.com/the-life-cycle-of-a-view-in-android-6a2c4665b95e

Question1: Is commit() in the fragment is synchronised ?

Read about: Differences between commit(), commitNow() and
commitAllowingStateLoss()

https://stackoverflow.com/questions/1392351/java-reflection-why-is-it-so-slow


1. What is content provider? Why it is used?
2. In which process it is run?
3. Difference between content-provider and content-resolver.
4. If you’ll have to share data with same signatured application how you can do that?
5. If you’ll have to access application context in content provider, How to do that?

5th question is extremely important, who hasn’t used content provider they can’t answer. Comment below who knows the answer of it.

https://stackoverflow.com/questions/21980641/understanding-androidlaunchmode

https://stackoverflow.com/questions/45546595/android-clean-architecture

https://stackoverflow.com/questions/31761351/difference-between-thread-and-handler

https://stackoverflow.com/questions/5919865/difference-between-intent-and-intenfilter-in-android#:~:text=An%20intent%20is%20an%20object%20that%20can%20hold%20the%20os,os%20or%20other%20app%20activities.

Q4: if your design round is coming up
“Design analytics library” should be your first priority.

Let me help you with this.

Make sure you ask/include following points while designing any analytics library:

1. Priorities of events: Immediate/Medium/Low
2. Offline support- if network is not available or events failed during network call
3. Maximum memory allocation for offline support(ex. If you’ve events stored for 5 days and still couldn’t reach to server due to any reason, should we remove those events or not from local storage)
4. Retry whenever network comes
5. Batch size define based in network type(2g,3g,4g, wifi).
6. Url configurations: should we keep url fixed or user should defined
7. Overloaded function for passing single event/multiple events
8.Implement abstraction- in future you might have to change analytics library.
9. Library support for current project or multiple?
10. Retry network call or change in batch size if api fails.

Q6: Design Image loading library like Glide in android

From this question #interviewer will check how well do you know about.

a. Memory leaking-> because glide hold the reference of images/context(If activity or fragment is destroyed after that your bitmap is downloaded and then if library try to set bitmap in your image). You can read more on:
i. Causes for memory leaking
ii How to avoid memory leak.

b. Garbage collector -> in which thread it runs(another interview question)

c. Your design knowledge: You can read about java design patterns.

d. LRU cache (VV IMP) -> LinkedHashMap is used internally and used on so many places. Must read, Very interesting also. I can't even describe here the benefits of LRU cache and LinkedHashMap.

e. Disk cache, Thread pool(if 1000 images need to download in parallel) , Executor service, Handle duplicate request for same image:

f. Types of references android has: (Really helpful in avoiding memory leak)
i. Weak ii. Soft iii. Phantom iv. Strong

https://proandroiddev.com/everything-you-need-to-know-about-memory-leaks-in-android-d7a59faaf46a
https://medium.com/google-developer-experts/finally-understanding-how-references-work-in-android-and-java-26a0d9c92f83
https://medium.com/flobiz-blog/garbage-collector-an-android-story-9bebea9d44d9
https://github.com/yasinkacmaz/jetflix.git
https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes
